version: '2'

services:

# LAVA server (for testing) instance inheriting from ci-box-lava-master
  lava-server:
    container_name: lava-server
    hostname: lava-server
    extends:
      file: ./ci-box-lava-master/docker-compose.yml
      service: lava-server
    build:
      args:
        admin_username: admin
        admin_password: password
        admin_token: "d0siRzClNHWNtUYJbpmjOPEyPp0QLCKqQtDGTftN"
        workers: lava_worker0
    networks:
      default:
        aliases:
          - lava.server
    ports:
      - "8042:80" # expose http to outside
    volumes:
      - ./overlays/lava-server/etc/lava-server/dispatcher-config/devices:/etc/lava-server/dispatcher-config/devices
      - ./overlays/lava-server/etc/lava-server/dispatcher-config/health-checks:/etc/lava-server/dispatcher-config/health-checks

# LAVA worker0 (for testing) instance inheriting from ci-box-lava-worker
  lava-worker:
    container_name: lava-worker0
    hostname: lava_worker0
    extends:
      file: ./ci-box-lava-worker/docker-compose.yml
      service: lava-worker
    build:
      args:
        server: lava-server
    volumes:
      - /boot:/boot
      - /lib/modules:/lib/modules
    environment:
      # We don't export /dev/kvm for compatibility reason (LAVA in a VM)
      # Force libguestfs to use emulation instead of virtualization
      - LIBGUESTFS_BACKEND_SETTINGS=force_tcg
    privileged: true

# File Server (FTP/HTPP) to store artifacts (images, test templates...)
  fileserver:
    container_name: fileserver
    hostname: fileserver
    extends:
      file: ./ci-box-fileserver/docker-compose.yml
      service: fileserver
    build:
      args:
        http_port: 80
        ftp_port: 21
        root: "/wwwroot"
    ports: # expose http to outside
      - "8081:80"
    volumes:
      - ./overlays/fileserver/wwwroot:/wwwroot

# Jenkins (for building) instance inheriting from ci-box-jenkins
  jenkins-server:
    container_name: jenkins-server
    hostname: jenkins-server
    user: jenkins:${DOCKER_GID}
    extends:
      file: ./ci-box-jenkins/docker-compose.yml
      service: jenkins
    build:
      args:
        version: lts
        admin_username: admin
        admin_password: password
        extra_packages: "docker.io ftp-upload build-essential gcc-aarch64-linux-gnu bc sudo ftp wget gettext-base"
        plugins: "git mailer git-parameter build-timeout publish-over-ftp"
    volumes:
      - ./overlays/jenkins/var/jenkins_home/jobs:/var/jenkins_home/jobs
      # Link docker.sock so openembedded build job can use host docker
      - /var/run/docker.sock:/var/run/docker.sock
      # Link oe-workspace inside oe-build job workspace to avoid fetching poky
      # repo twice, as Jenkins only supports pulling inside job workspace
      - oe-workspace:/var/jenkins_home/jobs/oe-build/workspace/oe-workspace

# SQUAD - Software Quality Dashboard
  squad:
    container_name: squad
    hostname: squad
    extends:
      file: ./ci-box-squad/docker-compose.yml
      service: squad
    build:
      args:
        admin_username: admin
        admin_password: password
        admin_token: "2d703e793ea345efdbab52d95fe33ec715bcc2d4"
        group: "Linaro"
        projects: "linux-mainline openembedded"
        # Lava test execution backend
        lava_server: lava.server
        lava_username: admin
        lava_token: "d0siRzClNHWNtUYJbpmjOPEyPp0QLCKqQtDGTftN"
    ports: # expose http to outside
      - "8080:80"

# OpenEmbedded specific volumes needed to share build and downloads
# directory with Jenkins and KAS docker containers
#
# NOTE: If you have already existing OE downloads directory, you can
# symlink oe-downloads directory to it, or replace path below to speed
# up first build.
volumes:
  oe-workspace:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ./ci-box-openembedded/oe-workspace
  oe-downloads:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ./ci-box-openembedded/oe-downloads
